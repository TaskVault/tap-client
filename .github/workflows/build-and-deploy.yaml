name: Build and Deploy

on:
  push:
    branches: [ master, cicd ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      IMAGE: ${{ secrets.IMAGE_NAME }}
      REPOSITORY: ${{ secrets.REPOSITORY_NAME }}
      ARTIFACT_REGISTRY_REGION: europe-west1
      CLUSTER_REGION: europe-west1
      RUN_ID: ${{ github.run_id }}


    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Update Submodules
      run: |
        git submodule sync
        git submodule update --init --recursive

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GOOGLE_PROJECT }}

    - name: Build and Push Docker Image to Artifact Registry
      run: |
        gcloud auth configure-docker $ARTIFACT_REGISTRY_REGION-docker.pkg.dev
        docker build -t $ARTIFACT_REGISTRY_REGION-docker.pkg.dev/$GOOGLE_PROJECT/$REPOSITORY/$IMAGE:$RUN_ID .
        docker push $ARTIFACT_REGISTRY_REGION-docker.pkg.dev/$GOOGLE_PROJECT/$REPOSITORY/$IMAGE:$RUN_ID

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      IMAGE: ${{ secrets.IMAGE_NAME }}
      REPOSITORY: ${{ secrets.REPOSITORY_NAME }}
      APP_NAME: tap-client
      ARTIFACT_REGISTRY_REGION: europe-west1
      CLUSTER_REGION: europe-west1
      RUN_ID: ${{ github.run_id }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GOOGLE_PROJECT }}

    # Deploy the Docker image to the GKE cluster
    - name: Deploy to Kubernetes Cluster
      run: |-
        # Update Google Cloud SDK components
        gcloud components update
        # Install the gke-gcloud-auth-plugin if not already installed
        gcloud components install gke-gcloud-auth-plugin
        gcloud container clusters get-credentials $CLUSTER_NAME --region $CLUSTER_REGION
        sed -i "s/\$LOCATION/$ARTIFACT_REGISTRY_REGION/g" kubernetes/stage/deployment.yaml
        sed -i "s/\$PROJECT/$GOOGLE_PROJECT/g" kubernetes/stage/deployment.yaml
        sed -i "s/\$REPO/$REPOSITORY/g" kubernetes/stage/deployment.yaml
        sed -i "s/\$IMAGE/$IMAGE/g" kubernetes/stage/deployment.yaml
        sed -i "s/\$VERSION/$RUN_ID/g" kubernetes/stage/deployment.yaml
        kubectl apply -f kubernetes/stage

    - name: Test API Deployment status
      run: |-
        kubectl rollout status deployment/$APP_NAME
        kubectl get service $APP_NAME -o wide
